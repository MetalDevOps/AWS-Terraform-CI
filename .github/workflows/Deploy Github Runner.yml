name: Github Runner Deploy

on:
  workflow_dispatch:
    inputs:
      force:
        description: "Enter 'force' if you want to force a refresh"
        required: false
        default: ""

env:
  ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install -y terraform
        terraform -help
    - name: Install AWS-CLI && Setup
      run: |
        sudo apt-get install awscli
        aws configure set aws_access_key_id $AWS_ACCESS_KEY
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set default.region us-east-1
    - name: Install Python && Ansible
      run: |
        python -m pip install --upgrade pip
        pip install boto3
        pip install ansible
    - name: set ansible config secrets
      run: |
        echo "$ANSIBLE_VAULT_PASSWORD" > .ansible-vault-password
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Run Terraform - Deploy 1 master and 1 Worker
      run: |
        terraform init
        terraform apply -auto-approve
    - name: Run Ansible - Add Runner
      run: |
        ansible-playbook -i aws_ec2.yaml --limit "tag_name_ninja" -u ubuntu -e "action=add" setup-runner.yml