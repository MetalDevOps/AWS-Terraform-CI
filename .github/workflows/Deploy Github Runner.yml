name: Github Runner Deploy

on:
  workflow_dispatch:
    inputs:
      force:
        description: "Enter 'force' if you want to force a refresh"
        required: false
        default: ""

env:
  ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: GitHubActions-${{ github.run_id }}

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2.3.1
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
        name: id_rsa # optional
        config: ${{ secrets.SSH_CONFIG }} # ssh_config; optional
        if_key_exists: replace # replace / ignore / fail; optional (defaults to fail)

    - name: Set up Python 3.9
      uses: actions/setup-python@v3.1.2
      with:
        python-version: 3.9

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.4.0
      with:
        terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON

    - name: Install Python & Ansible
      run: |
        python -m pip install --upgrade pip
        pip install boto3
        pip install ansible

    - name: Setup aws profile
      run: |
        mkdir -p ~/.aws
        aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region us-east-1

    - name: Run Terraform - Deploy 1 master and 1 Worker
      run: |
        terraform init
        terraform apply -target=module.deploy-dev --auto-approve

    - name: Add inventory to KNOWN_HOSTS
      run: |
        ansible-playbook -i aws_ec2.yaml --limit "tag_name_ninja" ssh_setup.yml
  
    - name: Run Ansible - Add Runner
      run: |
        ansible-playbook -i aws_ec2.yaml --limit "tag_name_ninja" -e "action=add" setup-runner.yml